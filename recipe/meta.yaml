{% set name = "pyFAI" %}
{% set version = "0.20.0" %}
{% set sha256 = "86cc23c130d4579e1cf322237e9f9cc8338c586eb929d1a469a0c36f2a4cdd9d" %}

package:
  name: {{ name|lower }}-base
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 1
  skip: true  # [py2k and win]
  entry_points:
    - check_calib = pyFAI.app.check_calib:main
    - detector2nexus = pyFAI.app.detector2nexus:main
    - diff_map = pyFAI.app.diff_map:main
    - diff_tomo = pyFAI.app.diff_tomo:main
    - eiger-mask = pyFAI.app.eiger_mask:main
    - MX-calibrate = pyFAI.app.mx_calibrate:main
    - pyFAI-average = pyFAI.app.average:main
    - pyFAI-benchmark = pyFAI.app.benchmark:main
    - pyFAI-calib = pyFAI.app.calib:main
    - pyFAI-calib2 = pyFAI.app.calib2:main
    - pyFAI-drawmask = pyFAI.app.drawmask:main
    - pyFAI-integrate = pyFAI.app.integrate:main
    - pyFAI-recalib = pyFAI.app.recalib:main
    - pyFAI-saxs = pyFAI.app.saxs:main
    - pyFAI-waxs = pyFAI.app.waxs:main

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}

  host:
    - python
    - setuptools
    - numpy
    - cython
    - pip

  run:
    - python
    - {{ pin_compatible('numpy') }}
    - fabio
    - matplotlib-base
    - scipy
    - numexpr
    - h5py
    - silx-base
    - setuptools

test:
  imports:
    - pyFAI
    - pyFAI.test
    - pyFAI.third_party
# Bring these back when CDT/yum stuff is done
#  commands:
#    - pyFAI-calib -h

outputs:
  - name: pyfai-base

  - name: pyfai
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage('pyfai-base', max_pin="x.x.x.x") }}
        - matplotlib
        - silx
        - hdf5plugin
    test:
      imports:
        - pyFAI
        - pyFAI.test
        - pyFAI.third_party
        - pyFAI.gui

about:
  home: https://github.com/silx-kit/pyFAI/
  license: MIT
  license_family: MIT
  license_file: copyright
  summary: Python implementation of fast azimuthal integration

  description: |
    pyFAI is an azimuthal integration library that tries to be fast (as fast
    as C and even more using OpenCL and GPU). It is based on histogramming of
    the 2theta/Q positions of each (center of) pixel weighted by the intensity
    of each pixel, but parallel version uses a SparseMatrix-DenseVector
    multiplication. Neighboring output bins get also a contribution of pixels
    next to the border thanks to pixel splitting. Finally pyFAI provides also
    tools to calibrate the experimental setup using Debye-Scherrer rings of a
    reference compound.
  doc_url: http://www.silx.org/doc/pyFAI/latest/
  dev_url: https://github.com/silx-kit/pyFAI/

extra:
  recipe-maintainers:
    - CJ-Wright
    - tacaswell
    - chiahaoliu
    - tschoonj
    - kif
    - t20100
